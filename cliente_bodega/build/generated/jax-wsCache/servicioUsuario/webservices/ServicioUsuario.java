
package webservices;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.1
 * Generated source version: 2.2
 * 
 */
@WebService(name = "servicioUsuario", targetNamespace = "http://webservice/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServicioUsuario {


    /**
     * 
     * @param nombre
     * @return
     *     returns webservices.Usuario
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarUsuario", targetNamespace = "http://webservice/", className = "webservices.BuscarUsuario")
    @ResponseWrapper(localName = "buscarUsuarioResponse", targetNamespace = "http://webservice/", className = "webservices.BuscarUsuarioResponse")
    @Action(input = "http://webservice/servicioUsuario/buscarUsuarioRequest", output = "http://webservice/servicioUsuario/buscarUsuarioResponse")
    public Usuario buscarUsuario(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://webservice/", className = "webservices.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://webservice/", className = "webservices.HelloResponse")
    @Action(input = "http://webservice/servicioUsuario/helloRequest", output = "http://webservice/servicioUsuario/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @return
     *     returns java.util.List<webservices.Bodega>
     */
    @WebMethod(operationName = "Listar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Listar", targetNamespace = "http://webservice/", className = "webservices.Listar")
    @ResponseWrapper(localName = "ListarResponse", targetNamespace = "http://webservice/", className = "webservices.ListarResponse")
    @Action(input = "http://webservice/servicioUsuario/ListarRequest", output = "http://webservice/servicioUsuario/ListarResponse")
    public List<Bodega> listar();

    /**
     * 
     * @param nombre
     * @param contra
     * @return
     *     returns webservices.Usuario
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validarUsuario", targetNamespace = "http://webservice/", className = "webservices.ValidarUsuario")
    @ResponseWrapper(localName = "validarUsuarioResponse", targetNamespace = "http://webservice/", className = "webservices.ValidarUsuarioResponse")
    @Action(input = "http://webservice/servicioUsuario/validarUsuarioRequest", output = "http://webservice/servicioUsuario/validarUsuarioResponse")
    public Usuario validarUsuario(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "contra", targetNamespace = "")
        String contra);

}
